// Generated by view binder compiler. Do not edit!
package com.project.codex.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.project.codex.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addButton;

  @NonNull
  public final EditText authorInput;

  @NonNull
  public final TextView authorText;

  @NonNull
  public final EditText bookInput;

  @NonNull
  public final EditText imgInput;

  @NonNull
  public final TextView instructions;

  @NonNull
  public final TextView pageNumberText;

  @NonNull
  public final EditText pagesInput;

  @NonNull
  public final FloatingActionButton scanButton;

  @NonNull
  public final Button searchButton;

  @NonNull
  public final EditText titleInput;

  @NonNull
  public final TextView titleText;

  private ActivityAddBinding(@NonNull ConstraintLayout rootView, @NonNull Button addButton,
      @NonNull EditText authorInput, @NonNull TextView authorText, @NonNull EditText bookInput,
      @NonNull EditText imgInput, @NonNull TextView instructions, @NonNull TextView pageNumberText,
      @NonNull EditText pagesInput, @NonNull FloatingActionButton scanButton,
      @NonNull Button searchButton, @NonNull EditText titleInput, @NonNull TextView titleText) {
    this.rootView = rootView;
    this.addButton = addButton;
    this.authorInput = authorInput;
    this.authorText = authorText;
    this.bookInput = bookInput;
    this.imgInput = imgInput;
    this.instructions = instructions;
    this.pageNumberText = pageNumberText;
    this.pagesInput = pagesInput;
    this.scanButton = scanButton;
    this.searchButton = searchButton;
    this.titleInput = titleInput;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_button;
      Button addButton = ViewBindings.findChildViewById(rootView, id);
      if (addButton == null) {
        break missingId;
      }

      id = R.id.author_input;
      EditText authorInput = ViewBindings.findChildViewById(rootView, id);
      if (authorInput == null) {
        break missingId;
      }

      id = R.id.authorText;
      TextView authorText = ViewBindings.findChildViewById(rootView, id);
      if (authorText == null) {
        break missingId;
      }

      id = R.id.bookInput;
      EditText bookInput = ViewBindings.findChildViewById(rootView, id);
      if (bookInput == null) {
        break missingId;
      }

      id = R.id.img_input;
      EditText imgInput = ViewBindings.findChildViewById(rootView, id);
      if (imgInput == null) {
        break missingId;
      }

      id = R.id.instructions;
      TextView instructions = ViewBindings.findChildViewById(rootView, id);
      if (instructions == null) {
        break missingId;
      }

      id = R.id.pageNumberText;
      TextView pageNumberText = ViewBindings.findChildViewById(rootView, id);
      if (pageNumberText == null) {
        break missingId;
      }

      id = R.id.pages_input;
      EditText pagesInput = ViewBindings.findChildViewById(rootView, id);
      if (pagesInput == null) {
        break missingId;
      }

      id = R.id.scanButton;
      FloatingActionButton scanButton = ViewBindings.findChildViewById(rootView, id);
      if (scanButton == null) {
        break missingId;
      }

      id = R.id.searchButton;
      Button searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.title_input;
      EditText titleInput = ViewBindings.findChildViewById(rootView, id);
      if (titleInput == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityAddBinding((ConstraintLayout) rootView, addButton, authorInput, authorText,
          bookInput, imgInput, instructions, pageNumberText, pagesInput, scanButton, searchButton,
          titleInput, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
